% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shapley.r
\name{shapley}
\alias{shapley}
\title{Explain predictions}
\usage{
shapley(object, X, x.interest, sample.size = 100, class = NULL, ...)
}
\arguments{
\item{object}{The object is the machine learning model. Different types are allowed. 
Recommended are mlr WrappedModel and caret train objects. The \code{object} can also be 
a function that predicts the outcome given features or anything with an S3 predict function,
like an object from class \code{lm}.}

\item{X}{data.frame with the data for the prediction model}

\item{x.interest}{data.frame with a single row for the instance to be explained.}

\item{sample.size}{Number of samples to be drawn to estimate the Shapley value. The higher the more accurate the estimations.}

\item{class}{In case of classification, class specifies the class for which to predict the probability. 
By default the multiclass classification is done.}
}
\value{
A PDP object (R6). Its methods and variables can be accessed with the \code{$}-operator:
\item{sample.size}{The number of times coalitions/marginals are sampled from data X. The higher the more accurate the explanations become.}
\item{x.interest}{data.frame with the instance of interest}
\item{y.hat.interest}{predicted value for instance of interest}
\item{y.hat.averate}{average predicted value for data \code{X}} 
\item{x}{method to get/set the instance. See examples for usage.}
\item{data()}{method to extract the results of the shapley estimations. 
Returns a data.frame with the feature names (\code{feature}) and contributions to the prediction (\code{phi})}
\item{plot()}{method to plot the Shapley value. See \link{plot.Shapley}}

\item{\code{run()}}{[internal] method to run the interpretability method. Use \code{obj$run(force = TRUE)} to force a rerun.}
General R6 methods
\item{\code{clone()}}{[internal] method to clone the R6 object.}
\item{\code{initialize()}}{[internal] method to initialize the R6 object.}
}
\description{
shapley() computes feature contributions for single predictions with the Shapley value, an approach from cooperative game theory approach. 
The features values of an instance cooperate to achieve the prediction. 
shapley() fairly distributes the difference of the instance's prediction and the datasets average prediction among the features. 
A features contribution can be negative.
}
\details{
See TODO: BOOK REFERENCE
}
\examples{
# First we fit a machine learning model on the Boston housing data
library("randomForest")
data("Boston", package  = "MASS")
mod = randomForest(medv ~ ., data = Boston, ntree = 50)
X = Boston[-which(names(Boston) == "medv")]

# Then we explain the first instance of the dataset with the shapley() method:
x.interest = X[1,]
shap = shapley(mod, X, x.interest = x.interest)
shap

# Look at the results in a table
shap$data()
# Or as a plot
plot(shap)

# shapley() also works with multiclass classification
library("randomForest")
mod = randomForest(Species ~ ., data= iris, ntree=50)
X = iris[-which(names(iris) == 'Species')]

# Then we explain the first instance of the dataset with the shapley() method:
shap = shapley(mod, X, x.interest = X[1,], predict.args = list(type='prob'))
shap$data()
plot(shap) 

# You can also focus on one class
shap = shapley(mod, X, x.interest = X[1,], class = 2, predict.args = list(type='prob'))
shap$data()
plot(shap) 

}
\references{
Strumbelj, E., Kononenko, I., Štrumbelj, E., & Kononenko, I. (2014). Explaining prediction models and individual predictions with feature contributions. Knowledge and Information Systems, 41(3), 647–665. https://doi.org/10.1007/s10115-013-0679-x
}
\seealso{
A different way to explain predictions: \link{lime}

\link{lime}
}
